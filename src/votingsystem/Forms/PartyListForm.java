/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package votingsystem.Forms;

import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.Election;
import model.PartyList;

/**
 *
 * @author jerome
 */
public class PartyListForm extends javax.swing.JFrame {

    /**
     * Creates new form PartyListForm
     */
    ArrayList<PartyList> listOfPartylist;
    private ControlPanel cpanel;
    private Election election;
    public PartyListForm(Election election, ControlPanel controlPanel) {
        this.election = election;
        this.cpanel = controlPanel;
        
        
        initComponents();
        
        
        
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        scrollpane = new javax.swing.JScrollPane();
        partyListTable = new javax.swing.JTable();
        deletePartyListBtn = new javax.swing.JButton();
        manageCandidate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        createPartylistBtn = new javax.swing.JButton();
        backToCpanelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        partyListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Party ID", "Party Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ((DefaultTableCellRenderer) partyListTable.getTableHeader().getDefaultRenderer())
        .setHorizontalAlignment(JLabel.CENTER); // header to center
        DefaultTableCellRenderer rendar = new DefaultTableCellRenderer();
        rendar.setHorizontalAlignment(JLabel.CENTER);
        for(int i = 0; i < partyListTable.getColumnCount(); i++) {
            partyListTable.getColumnModel().getColumn(i).setCellRenderer(rendar);
        }

        addRowToPartyListTable();
        scrollpane.setViewportView(partyListTable);

        deletePartyListBtn.setText("Delete Partylist");
        deletePartyListBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePartyListBtnActionPerformed(evt);
            }
        });

        manageCandidate.setText("Manage Candidate");
        manageCandidate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageCandidateActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Partylist");

        createPartylistBtn.setText("Create Partylist");
        createPartylistBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPartylistBtnActionPerformed(evt);
            }
        });

        backToCpanelBtn.setText("Back to Control Panel");
        backToCpanelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToCpanelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(scrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(backToCpanelBtn)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(createPartylistBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(deletePartyListBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(manageCandidate)))))
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(199, 199, 199))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deletePartyListBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(manageCandidate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(createPartylistBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(backToCpanelBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Partylist", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deletePartyListBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePartyListBtnActionPerformed
        // TODO add your handling code here:
        int row = partyListTable.getSelectedRow();
        if(row == -1) {
            JOptionPane.showMessageDialog(this, "No row is selected");
            return;
        }else {
//            Debugging Purposes
//            for(int i = 0; i < partyListTable.getColumnCount(); i++) {
//                System.out.println(partyListTable.getValueAt(row, i));
//            }
            if(JOptionPane.showConfirmDialog(this, "Are you sure?") == 0) {
                int partylistId = (int) partyListTable.getValueAt(row, 0);
                String partylistName = (String) partyListTable.getValueAt(row, 1);
                if(PartyList.delete(partylistId)) {
                    JOptionPane.showMessageDialog(this, partylistName +" is deleted");
                    reloadPage();
                    return;
                }
            }
        }
    }//GEN-LAST:event_deletePartyListBtnActionPerformed

    private void createPartylistBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPartylistBtnActionPerformed
        // TODO add your handling code here:
        String partylistName = JOptionPane.showInputDialog(this, "Partylist name");
        if(partylistName == null || partylistName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Error: Empty Field");
            return;
        }
        if(PartyList.isAvailable(partylistName)) {
            if(PartyList.insert(partylistName, election.getId()) > 0) {
                JOptionPane.showMessageDialog(this, partylistName + " is inserted");
                addRowToPartyListTable();
                return;
            }
        }else {
            JOptionPane.showMessageDialog(this, partylistName + " already exist");
        }
    }//GEN-LAST:event_createPartylistBtnActionPerformed

    private void manageCandidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageCandidateActionPerformed
        // TODO add your handling code here:
        
        int row = partyListTable.getSelectedRow();
        if(row == -1) {
            JOptionPane.showMessageDialog(this, "No row is selected");
            return;
        }else {
            int partylistId = (int) partyListTable.getValueAt(row, 0);
            String partylistName = (String) partyListTable.getValueAt(row, 1);
            PartyList partylist = new PartyList();
            partylist.setId(partylistId);
            partylist.setName(partylistName);
            partylist.setElectionId(election.getId());
            CandidateForm candidateForm = new CandidateForm(this, partylist);
            this.setVisible(false);
            candidateForm.setVisible(true);
        }
        
    }//GEN-LAST:event_manageCandidateActionPerformed

    private void backToCpanelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToCpanelBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        this.cpanel.setVisible(true);
    }//GEN-LAST:event_backToCpanelBtnActionPerformed

    
    private void addRowToPartyListTable() {
        ArrayList<PartyList> listOfPartyList = PartyList.getAllPartyListUsingElectionId(election.getId());
        if(listOfPartyList != null) {
            DefaultTableModel tableModel = (DefaultTableModel) partyListTable.getModel();
            tableModel.setRowCount(0);
            Object rowData[] = new Object[2];
            for(int i = 0; i < listOfPartyList.size(); ++i) {
                rowData[0] = listOfPartyList.get(i).getId();
                rowData[1] = listOfPartyList.get(i).getName();
                tableModel.addRow(rowData);
            }
        }
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(PartyListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(PartyListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(PartyListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(PartyListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PartyListForm().setVisible(true);
//            }
//        });
//    }
    
//    User made function
private void reloadPage() {
    listOfPartylist = PartyList.getAllPartyListUsingElectionId(election.getId());
    addRowToPartyListTable();
    
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToCpanelBtn;
    private javax.swing.JButton createPartylistBtn;
    private javax.swing.JButton deletePartyListBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton manageCandidate;
    private javax.swing.JTable partyListTable;
    private javax.swing.JScrollPane scrollpane;
    // End of variables declaration//GEN-END:variables
}
